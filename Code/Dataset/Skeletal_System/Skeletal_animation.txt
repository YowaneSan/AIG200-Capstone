Joints or bones (in green) used to
pose a hand. In practice, the joints
themselves are often hidden and
replaced by more user-friendly
objects or simply toggled invisible. In
this example from the open source
project Blender, these "handles" (in
blue) have been scaled down to bend
the fingers. The joints are still
controlling the deformation, but the
animator only sees the handles.
Skeletal animation
Skeletal animation or rigging is a technique in computer
animation in which a character (or other articulated object) is
represented in two parts: a polygonal or parametric mesh
representation of the surface of the object, and a hierarchical set of
interconnected parts (called joints or bones, and collectively
forming the skeleton), a virtual armature used to animate (pose and
keyframe) the mesh.[1] While this technique is often used to animate
humans and other organic figures, it only serves to make the
animation process more intuitive, and the same technique can be
used to control the deformation of any object—such as a door, a
spoon, a building, or a galaxy. When the animated object is more
general than, for example, a humanoid character, the set of "bones"
may not be hierarchical or interconnected, but simply represent a
higher-level description of the motion of the part of mesh it is
influencing.
The technique was introduced in 1988 by Nadia Magnenat
Thalmann, Richard Laperrière, and Daniel Thalmann.[2] This
technique is used in virtually all animation systems where simplified
user interfaces allows animators to control often complex algorithms
and a huge amount of geometry; most notably through inverse
kinematics and other "goal-oriented" techniques.
As described in an instructional article by Josh Petty:[3]
Rigging is making our characters able to move. The process of rigging is we take that digital
sculpture, and we start building the skeleton, the muscles, and we attach the skin to the character,
and we also create a set of animation controls, which our animators use to push and pull the body
around.
This technique constructs a series of bones (which need not correspond to any real-world anatomical
feature), sometimes also referred to as rigging in the noun sense. Each bone has a three-dimensional
transformation from the default bind pose (which includes its position, scale and orientation), and an
optional parent bone. The bones therefore form a hierarchy. The full transform of a child node is the product
of its parent transform and its own transform. So moving a thigh-bone will move the lower leg too. As the
character is animated, the bones change their transformation over time, under the influence of some
animation controller. A rig is generally composed of both forward kinematics and inverse kinematics parts
that may interact with each other. Skeletal animation is referring to the forward kinematics part of the rig,
where a complete set of bone configurations identifies a unique pose.
Technique
Each bone in the skeleton is associated with some portion of the character's visual representation (the mesh)
in a process called skinning. In the most common case of a polygonal mesh character, the bone is associated
with a group of vertices; for example, in a model of a human being, the bone for the thigh would be
associated with the vertices making up the polygons in the model's thigh. Portions of the character's skin
can normally be associated with multiple bones, each one having a scaling factors called vertex weights, or
blend weights. The movement of skin near the joints of two bones, can therefore be influenced by both
bones. In most state-of-the-art graphical engines, the skinning process is done on the GPU by a shader
program.
For a polygonal mesh, each vertex can have a blend weight for each bone. To calculate the final position of
the vertex, a transformation matrix is created for each bone which, when applied to the vertex, first puts the
vertex in bone space then puts it back into mesh space. After applying a matrix to the vertex, it is scaled by
its corresponding weight. This algorithm is called matrix-palette skinning or linear-blend skinning,[4]
because the set of bone transformations (stored as transform matrices) form a palette for the skin vertex to
choose from.
A bone represents a set of vertices (or some other object which represents something, such
as a leg),
The animator needs to control fewer characteristics of the model,
The animator can focus on the large-scale motion,
Bones are independently movable.
An animation can be defined by simple movements of the bones, instead of vertex by vertex
(in the case of a polygonal mesh).
A bone can only represent a set of vertices (or some other precisely defined object), and is
not more abstract or conceptual.
Does not provide realistic muscle movement and skin motion. Possible solutions to this
problem:
Special muscle controllers attached to the bones.
Consultation with physiology experts, to increase accuracy of musculoskeletal
realism with more thorough virtual anatomy simulations.
Skeletal animation is the standard way to animate characters or mechanical objects for a prolonged period of
time. It is commonly used by video game artists and in the film industry, and can also be applied to
mechanical objects and any other objects made up of rigid elements and joints.
Benefits and drawbacks
Strengths
Weaknesses
Applications
Performance capture (or motion capture) can speed up the process of skeletal animation, as well as
increasing the level of realism.
Rigs may be driven by ragdoll physics which automatically calculate physics of motion and resistance with
skeletal frames. Virtual anatomy properties such as weight of limbs, muscle reaction, bone strength, and
joint constraints may be added for realistic bouncing, buckling, fracture, and tumbling effects.
Some popular software packages within which rigs may be created include Blender, Autodesk Maya,
SideFX Houdini, Autodesk 3ds Max, Maxon Cinema 4D, Unreal Engine, and many others.
3D computer graphics
Morph target animation
Interactive skeleton-driven simulation
Cutout animation
1. Soriano, Marc. "Skeletal Animation" (http://alumni.cs.ucr.edu/~sorianom/cs134_09win/lab5.ht
m). Bourns College of Engineering. Retrieved 5 January 2011.
2. Magnenat-Thalmann, Nadia; Laperrière, Richard; Thalmann, Daniel (6–10 June 1988).
"Joint-Dependent Local Deformations for Hand Animation and Object Grasping".
Proceedings of Graphics Interface '88. Edmonton: 26–33.
3. Petty, Josh (26 July 2018). "What is 3D Rigging for Animation & Character Design?" (https://c
onceptartempire.com/what-is-rigging/). Concept Art Empire. Retrieved 29 November 2018.
4. Kavan, Ladislav. "Direct Skinning Methods and Deformation Primitives" (https://www.skinnin
g.org/direct-methods.pdf) (PDF). Skinning.org. University of Pennsylvania.
Retrieved from "https://en.wikipedia.org/w/index.php?title=Skeletal_animation&oldid=1233216555"
See also
References
